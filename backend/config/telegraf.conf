[global_tags]
  environment = "${ENVIRONMENT}"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "s"
  hostname = ""
  omit_hostname = false

[[outputs.influxdb_v2]]
  urls = ["${INFLUXDB_URL}"]
  token = "${INFLUXDB_TOKEN}"
  organization = "${INFLUXDB_ORG}"
  bucket = "${INFLUXDB_BUCKET}"

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

[[inputs.net]]

[[inputs.netstat]]

[[inputs.linux_sysctl_fs]]

[[inputs.temp]]

# Custom Kitronik sensor metrics
[[inputs.http]]
  urls = ["http://localhost:3001/metrics"]
  data_format = "prometheus"
  name_override = "kitronik_metrics"

[[inputs.exec]]
  commands = [
    "/usr/local/bin/read_kitronik_sensors.py"
  ]
  timeout = "5s"
  data_format = "json"
  name_override = "kitronik_raw"
  interval = "30s"

# Monitor Docker containers if present
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_names = []
  container_name_include = []
  container_name_exclude = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = []

# Monitor systemd services
[[inputs.systemd_units]]
  pattern = "gustyweather*.service"